<?xml version="1.0" ?>
<!-- - - - - - - - - - -->
<!--  Snap Backup      -->
<!--  Ant Build File   -->
<!-- - - - - - - - - - -->

<!--
   Be sure the version number is up to date in:
      org/snapbackup/settings/SystemAttributes.java
-->

<project>

   <property name="Home"        location=".." />
   <property name="JavaSource"  location="${Home}/src/java" />
   <property name="Resources"   location="${Home}/src/resources" />
   <property name="BuildFolder" location="${Home}/build" />
   <property name="JavaClasses" location="${Home}/build/classes" />
   <property name="HtmlFolder"  location="${Home}/build/classes/org/snapbackup/ui/userguide/html" />
   <property name="WebFolder"   location="${Home}/build/web" />
   <property name="MacApp"      location="${Home}/build/Snap Backup.app/Contents" />

   <target name="build">

      <!--  Get Snap Backup Version  -->
      <loadfile srcfile="${JavaSource}/org/snapbackup/settings/SystemAttributes.java" property="version">
         <filterchain>
            <linecontains><contains value="appVersion =" /></linecontains>
            <replaceregex pattern="^.*\&quot;(.*)\&quot;.*$" replace="\1" />
         </filterchain>
      </loadfile>
      <echo message="Version: ${version}" />
      <echo />

      <echo message="=== Create class files ===" />
      <delete dir="${BuildFolder}" />

      <!-- TODO: Remove line below -->
      <echo file="${BuildFolder}/version.txt">${version}</echo>

      <mkdir  dir="${JavaClasses}" />
      <javac
         srcdir="${JavaSource}"
         destdir="${JavaClasses}"
         debug="on"
         includeAntRuntime="false">
         <!--
         source="8"
         target="8"
         bootclasspath="$JAVA_HOME/jre/lib/rt.jar"
         [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.8
         http://stackoverflow.com/questions/7816423
         -->
         <compilerarg value="-Xlint:all,-serial" />
      </javac>
      <echo />

      <echo message="=== Prepare resources ===" />
      <copy todir="${JavaClasses}">
         <fileset dir="${Resources}/properties" />
      </copy>
      <copy file="${JavaClasses}/SnapBackup.properties"
         tofile="${JavaClasses}/SnapBackup_en.properties" />
      <copy todir="${JavaClasses}/org/snapbackup/ui/images">
         <fileset dir="${Resources}/graphics/application" />
      </copy>
      <copy file="${Resources}/snap-backup-user-guide.html" todir="${HtmlFolder}" />
      <copy file="${Resources}/SnapBackupSettings.xsd" todir="${JavaClasses}/org/snapbackup/business" />
      <!--  Workaround for: http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6457127 -->
      <!--  Part 1 of 2 -->
      <copy file="${JavaClasses}/SnapBackup_id.properties"
         tofile="${JavaClasses}/SnapBackup_in.properties" />
      <echo />

      <echo message="=== Create executable JAR file ===" />
      <jar destfile="${JavaClasses}/../snapbackup.jar" basedir="${JavaClasses}">
         <fileset dir="." includes="*.class" />
         <manifest>
            <attribute name="Main-Class" value="org.snapbackup.SnapBackup" />
            <attribute name="SplashScreen-Image" value="org/snapbackup/ui/images/splash.png" />
         </manifest>
      </jar>
      <echo />

      <property environment="env" />
      <condition property="doaction">
         <isset property="env.SnapBackupJksPass" />
      </condition>
      <antcall target="action" />
      <echo />

   </target>

   <target name="action" if="doaction">
      <echo message="=== Sign executable JAR file ===" />
      <!-- Create Keystore:
         $ cd src/resources
         $ keytool -genkey -alias snapbackup.org -validity 10000 -keyalg RSA -dname "CN=Dem
            Pilafian, OU=Product Management, O=Center Key, L=San Carlos, ST=California,
            C=US" -keystore snapbackup.jks
      -->
      <signjar
         jar="${JavaClasses}/../snapbackup.jar" storepass="${env.SnapBackupJksPass}"
         alias="snapbackup.org" keystore="${Resources}/snapbackup.jks" />
      <echo />
   </target>

</project>
